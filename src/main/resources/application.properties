# Application Configuration
spring.application.name=smart-code-review
server.port=8083
spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}

# Local development OTP configuration
otp.local.logging.enabled=true
otp.local.logging.format=detailed

# Thymeleaf Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Session Configuration
server.servlet.session.timeout=3600
spring.session.store-type=none

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin123

# Database Configuration (H2 for local development)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# AWS Configuration
aws.credentials.profile=default
aws.region=us-east-1
aws.profile=default



# SQS Configuration
aws.sqs.visibility-timeout=300
aws.sqs.message-retention-period=14400

# GitHub Configuration
github.api.base-url=https://api.github.com
github.api.token=${GITHUB_TOKEN}
github.rate-limit=5000

# Email Configuration (for OTP)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com
spring.mail.password=your-app-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Analysis Configuration
analysis.max-file-size=20971520
analysis.supported-extensions=.java,.py,.js,.ts,.cs,.go,.rb,.php
analysis.excluded-patterns=**/test/**,**/tests/**,**/node_modules/**,**/__pycache__/**,**/target/**,**/build/**
analysis.max-files-per-scan=50
analysis.timeout-seconds=300

# Session Management
session.duration=3600
session.scan-limit=3
session.otp-expiry=300
session.otp-length=6

# Token Optimization
token.optimization.nova-micro.max-tokens=500
token.optimization.nova-lite.max-tokens=4000
token.optimization.nova-premier.max-tokens=8000

# Bedrock Configuration
bedrock.region=us-east-1
bedrock.models.micro=us.amazon.nova-micro-v1:0
bedrock.models.lite=us.amazon.nova-lite-v1:0
bedrock.models.premier=us.amazon.nova-premier-v1:0

# Async Configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-

# WebSocket Configuration (for real-time progress)
spring.websocket.message-broker.enabled=true
spring.websocket.message-broker.relay-host=localhost
spring.websocket.message-broker.relay-port=61613

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.metrics.export.simple.enabled=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.somdiproy.smartcodereview=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.software.amazon.awssdk=DEBUG
logging.file.name=logs/smart-code-review.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=sessions,branches,reports

# Error Handling
server.error.whitelabel.enabled=false
server.error.path=/error



# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.serialization.indent-output=true

# Development Tools
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Update DynamoDB table names (create these in AWS Console)
aws.dynamodb.tables.sessions=smartcode-sessions
aws.dynamodb.tables.analysis-results=smartcode-analysis-results
aws.dynamodb.tables.issue-details=smartcode-issue-details

# S3 Configuration (create this bucket in AWS Console)
aws.s3.bucket=smartcode-temp-storage-1751306905

# Update Lambda ARNs after deployment
aws.lambda.functions.screening=arn:aws:lambda:us-east-1:257394460825:function:smartcode-screening-analyzer
aws.lambda.functions.detection=arn:aws:lambda:us-east-1:257394460825:function:smartcode-issue-detector
aws.lambda.functions.suggestions=arn:aws:lambda:us-east-1:257394460825:function:smartcode-suggestion-generator

# SQS Configuration (create this queue in AWS Console)
aws.sqs.queue-url=https://sqs.us-east-1.amazonaws.com/257394460825/smartcode-analysis-queue.fifo


# Updates to application.properties for complete configuration

# Add these AWS credentials configuration options
aws.credentials.access-key=${AWS_ACCESS_KEY_ID:}
aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY:}

# Bean configuration
spring.main.allow-bean-definition-overriding=true

# Jackson configuration for DynamoDB
spring.jackson.default-property-inclusion=NON_NULL

# Mail configuration for local development
spring.mail.test-connection=false

# Task execution for async processing
spring.task.execution.pool.keep-alive=60s

# Security configuration for development
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:}
spring.security.oauth2.client.registration.github.scope=repo,user:email

# CORS configuration
app.cors.allowed-origins=http://localhost:3000,http://localhost:8083
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.exposed-headers=X-Total-Count
app.cors.allow-credentials=true

# File upload limits
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Request timeout
spring.mvc.async.request-timeout=300000

# Health check
management.health.diskspace.enabled=true
management.health.db.enabled=true

